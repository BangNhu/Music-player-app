<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAnhienmatkhau.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAA90RVh0VGl0
        bGUAU2hvdztFeWU7SeMHJQAAArtJREFUOE+lk2lIVFEUx5+O9sGMGnJplSY0N8QFJNJRc2VSx22ccRzF
        XHLSSlxQMqFGXItxGy00UxuaUEdNxg0TZNBIIqM0/FKQ+1Lihlsbxr/7Xn4J/JB04Hfv5XDO7z2451IA
        /os9k/thr9AlsAh6BP1d6DOd1yH8HY8ljlSd2IE+6t5wPcMu51unVgZbaRR8q9EqvuVOmb/FqJxn3l3g
        zcmKtjc1JXWsUj8OVeLLoXv+CEiwSoNsIhuinFcGFan41PcIi2812PnyBguvmjDWUoyuOxJUBdusZ3NP
        i0n9AYKOS4Cc7qVYFaG2Sb0yCWaHGtFacQuRfB/wvNxhYWMLnicXIp47Gm7H43V9NpRx3F83XU8l0BJG
        kOFpzlHGufyslSUjNi4eXB8h7jd3YnBqDs6eYkgzC1Bc8xQePDGioy+jKDEIilB7xDmYcIlEj1II7O5m
        JERDo+nEyuo6vMIy0Pd+HDEpubB2ugQrgnpgBL7CTEzPLkHV2AqpMAQyD7MWIjCgUiTXpts6+rG5+RWb
        W98REpODB2ot4tMLcdbGA4LYTJSrnkMszcXM/ComZ5ZR96QDEj/JHBEcooThaddzS3uwtf0DG5vf8Kxr
        EMLEPBTWdqC67QXyqzUIjZdBrRnA5OwyI7iaqcKF8+Is5g/sTx428o+U19WohvB5cQMra9tobu9HYEQ6
        7FwiERSVhaZ2LSZmljD2YR6FFb1wupilNj6of4II6HlhFraPIK9IJK3fLnuohXboI4ZHpjC7sIaXw+Po
        6R+DTN4N7/DybQf3tEpSf4xAD5gOJUpSkp2RGB43czznFpCT7y2QD3sJSiZ8RAq4B92bcPXPe+fgllLM
        NrG0JXVHCHr0FTLXGJGspMKlDVTYlTpaRI+swW7RUYIxwYjAJhgSmK+6BJYwzYxgrweyH/ZM/jugfgM1
        0AHq4cSYZAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="FrmLogin.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4izutqAAAAAASUVORK5CYII=
</value>
  </data>
</root>